# OASIS_START
# DO NOT EDIT (digest: c1f4631e24a40f8bc3da3eef4437e3c5)
version = "0.12.0"
description = "HTTP library for Lwt, Async and Mirage"
requires = "re.emacs stringext uri uri.services fieldslib sexplib"
archive(byte) = "cohttp.cma"
archive(byte, plugin) = "cohttp.cma"
archive(native) = "cohttp.cmxa"
archive(native, plugin) = "cohttp.cmxs"
exists_if = "cohttp.cma"
package "lwt-core" (
 version = "0.12.0"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "lwt uri cohttp"
 archive(byte) = "cohttp_lwt.cma"
 archive(byte, plugin) = "cohttp_lwt.cma"
 archive(native) = "cohttp_lwt.cmxa"
 archive(native, plugin) = "cohttp_lwt.cmxs"
 exists_if = "cohttp_lwt.cma"
)

package "lwt" (
 version = "0.12.0"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "cohttp.lwt-core unix lwt.unix lwt.ssl conduit.lwt-unix"
 archive(byte) = "cohttp_lwt_unix.cma"
 archive(byte, plugin) = "cohttp_lwt_unix.cma"
 archive(native) = "cohttp_lwt_unix.cmxa"
 archive(native, plugin) = "cohttp_lwt_unix.cmxs"
 exists_if = "cohttp_lwt_unix.cma"
)

package "js" (
 version = "0.12.0"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "cohttp.lwt-core js_of_ocaml"
 archive(byte) = "cohttp_lwt_xhr.cma"
 archive(byte, plugin) = "cohttp_lwt_xhr.cma"
 archive(native) = "cohttp_lwt_xhr.cmxa"
 archive(native, plugin) = "cohttp_lwt_xhr.cmxs"
 exists_if = "cohttp_lwt_xhr.cma"
)

package "async" (
 version = "0.12.0"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "uri cohttp threads async conduit.async"
 archive(byte) = "cohttp_async.cma"
 archive(byte, plugin) = "cohttp_async.cma"
 archive(native) = "cohttp_async.cmxa"
 archive(native, plugin) = "cohttp_async.cmxs"
 exists_if = "cohttp_async.cma"
)
# OASIS_STOP

